//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API_LX.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LubriXpressEntities : DbContext
    {
        public LubriXpressEntities()
            : base("name=LubriXpressEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Carro> Carros { get; set; }
        public virtual DbSet<Cita> Citas { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<Resena> Resenas { get; set; }
        public virtual DbSet<Rol> Rols { get; set; }
        public virtual DbSet<Servicio> Servicios { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
    
        public virtual int ActualizarUsuario(Nullable<int> id_usuario, string nombre, string email, string contrasena, Nullable<int> id_rol)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            var id_rolParameter = id_rol.HasValue ?
                new ObjectParameter("id_rol", id_rol) :
                new ObjectParameter("id_rol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarUsuario", id_usuarioParameter, nombreParameter, emailParameter, contrasenaParameter, id_rolParameter);
        }
    
        public virtual int Crearcarro(string placa, string marca, string modelo, string anio, string motor, string vIN, string comentario, Nullable<System.DateTime> fecha_creacion)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("modelo", modelo) :
                new ObjectParameter("modelo", typeof(string));
    
            var anioParameter = anio != null ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(string));
    
            var motorParameter = motor != null ?
                new ObjectParameter("motor", motor) :
                new ObjectParameter("motor", typeof(string));
    
            var vINParameter = vIN != null ?
                new ObjectParameter("VIN", vIN) :
                new ObjectParameter("VIN", typeof(string));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("comentario", comentario) :
                new ObjectParameter("comentario", typeof(string));
    
            var fecha_creacionParameter = fecha_creacion.HasValue ?
                new ObjectParameter("fecha_creacion", fecha_creacion) :
                new ObjectParameter("fecha_creacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Crearcarro", placaParameter, marcaParameter, modeloParameter, anioParameter, motorParameter, vINParameter, comentarioParameter, fecha_creacionParameter);
        }
    
        public virtual int CrearCita(Nullable<int> id_servicio, string nombre_cliente, string apellidos_cliente, string telefono_cliente, string email_cliente, string direccion, string fecha_estimada, string marca_vehiculo, string modelo_vehiculo, string placa_vehiculo, string anio_vehiculo, string estado_cita, Nullable<System.DateTime> fecha_creacion)
        {
            var id_servicioParameter = id_servicio.HasValue ?
                new ObjectParameter("id_servicio", id_servicio) :
                new ObjectParameter("id_servicio", typeof(int));
    
            var nombre_clienteParameter = nombre_cliente != null ?
                new ObjectParameter("nombre_cliente", nombre_cliente) :
                new ObjectParameter("nombre_cliente", typeof(string));
    
            var apellidos_clienteParameter = apellidos_cliente != null ?
                new ObjectParameter("apellidos_cliente", apellidos_cliente) :
                new ObjectParameter("apellidos_cliente", typeof(string));
    
            var telefono_clienteParameter = telefono_cliente != null ?
                new ObjectParameter("telefono_cliente", telefono_cliente) :
                new ObjectParameter("telefono_cliente", typeof(string));
    
            var email_clienteParameter = email_cliente != null ?
                new ObjectParameter("email_cliente", email_cliente) :
                new ObjectParameter("email_cliente", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var fecha_estimadaParameter = fecha_estimada != null ?
                new ObjectParameter("fecha_estimada", fecha_estimada) :
                new ObjectParameter("fecha_estimada", typeof(string));
    
            var marca_vehiculoParameter = marca_vehiculo != null ?
                new ObjectParameter("marca_vehiculo", marca_vehiculo) :
                new ObjectParameter("marca_vehiculo", typeof(string));
    
            var modelo_vehiculoParameter = modelo_vehiculo != null ?
                new ObjectParameter("modelo_vehiculo", modelo_vehiculo) :
                new ObjectParameter("modelo_vehiculo", typeof(string));
    
            var placa_vehiculoParameter = placa_vehiculo != null ?
                new ObjectParameter("placa_vehiculo", placa_vehiculo) :
                new ObjectParameter("placa_vehiculo", typeof(string));
    
            var anio_vehiculoParameter = anio_vehiculo != null ?
                new ObjectParameter("anio_vehiculo", anio_vehiculo) :
                new ObjectParameter("anio_vehiculo", typeof(string));
    
            var estado_citaParameter = estado_cita != null ?
                new ObjectParameter("estado_cita", estado_cita) :
                new ObjectParameter("estado_cita", typeof(string));
    
            var fecha_creacionParameter = fecha_creacion.HasValue ?
                new ObjectParameter("fecha_creacion", fecha_creacion) :
                new ObjectParameter("fecha_creacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearCita", id_servicioParameter, nombre_clienteParameter, apellidos_clienteParameter, telefono_clienteParameter, email_clienteParameter, direccionParameter, fecha_estimadaParameter, marca_vehiculoParameter, modelo_vehiculoParameter, placa_vehiculoParameter, anio_vehiculoParameter, estado_citaParameter, fecha_creacionParameter);
        }
    
        public virtual int CrearResena(string nombre_cliente, string apellidos_cliente, string telefono_cliente, string email_cliente, Nullable<int> calificacion, string comentario, Nullable<System.DateTime> fecha_creacion)
        {
            var nombre_clienteParameter = nombre_cliente != null ?
                new ObjectParameter("nombre_cliente", nombre_cliente) :
                new ObjectParameter("nombre_cliente", typeof(string));
    
            var apellidos_clienteParameter = apellidos_cliente != null ?
                new ObjectParameter("apellidos_cliente", apellidos_cliente) :
                new ObjectParameter("apellidos_cliente", typeof(string));
    
            var telefono_clienteParameter = telefono_cliente != null ?
                new ObjectParameter("telefono_cliente", telefono_cliente) :
                new ObjectParameter("telefono_cliente", typeof(string));
    
            var email_clienteParameter = email_cliente != null ?
                new ObjectParameter("email_cliente", email_cliente) :
                new ObjectParameter("email_cliente", typeof(string));
    
            var calificacionParameter = calificacion.HasValue ?
                new ObjectParameter("calificacion", calificacion) :
                new ObjectParameter("calificacion", typeof(int));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("comentario", comentario) :
                new ObjectParameter("comentario", typeof(string));
    
            var fecha_creacionParameter = fecha_creacion.HasValue ?
                new ObjectParameter("fecha_creacion", fecha_creacion) :
                new ObjectParameter("fecha_creacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearResena", nombre_clienteParameter, apellidos_clienteParameter, telefono_clienteParameter, email_clienteParameter, calificacionParameter, comentarioParameter, fecha_creacionParameter);
        }
    
        public virtual int CrearRol(string nombre_rol)
        {
            var nombre_rolParameter = nombre_rol != null ?
                new ObjectParameter("nombre_rol", nombre_rol) :
                new ObjectParameter("nombre_rol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearRol", nombre_rolParameter);
        }
    
        public virtual int CrearServicio(string nombre_servicio, string descripcion, string duracion, string imagen_servicio, Nullable<System.DateTime> fecha_creacion)
        {
            var nombre_servicioParameter = nombre_servicio != null ?
                new ObjectParameter("nombre_servicio", nombre_servicio) :
                new ObjectParameter("nombre_servicio", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var duracionParameter = duracion != null ?
                new ObjectParameter("duracion", duracion) :
                new ObjectParameter("duracion", typeof(string));
    
            var imagen_servicioParameter = imagen_servicio != null ?
                new ObjectParameter("imagen_servicio", imagen_servicio) :
                new ObjectParameter("imagen_servicio", typeof(string));
    
            var fecha_creacionParameter = fecha_creacion.HasValue ?
                new ObjectParameter("fecha_creacion", fecha_creacion) :
                new ObjectParameter("fecha_creacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearServicio", nombre_servicioParameter, descripcionParameter, duracionParameter, imagen_servicioParameter, fecha_creacionParameter);
        }
    
        public virtual int CrearUsuario(string nombre, string email, string contrasena, Nullable<int> id_rol)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            var id_rolParameter = id_rol.HasValue ?
                new ObjectParameter("id_rol", id_rol) :
                new ObjectParameter("id_rol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearUsuario", nombreParameter, emailParameter, contrasenaParameter, id_rolParameter);
        }
    
        public virtual int EditarCitas(Nullable<int> id_cita, Nullable<int> id_servicio, string nombre_cliente, string apellidos_cliente, string telefono_cliente, string email_cliente, string direccion, string fecha_estimada, string marca_vehiculo, string modelo_vehiculo, string placa_vehiculo, string anio_vehiculo, string estado_cita)
        {
            var id_citaParameter = id_cita.HasValue ?
                new ObjectParameter("id_cita", id_cita) :
                new ObjectParameter("id_cita", typeof(int));
    
            var id_servicioParameter = id_servicio.HasValue ?
                new ObjectParameter("id_servicio", id_servicio) :
                new ObjectParameter("id_servicio", typeof(int));
    
            var nombre_clienteParameter = nombre_cliente != null ?
                new ObjectParameter("nombre_cliente", nombre_cliente) :
                new ObjectParameter("nombre_cliente", typeof(string));
    
            var apellidos_clienteParameter = apellidos_cliente != null ?
                new ObjectParameter("apellidos_cliente", apellidos_cliente) :
                new ObjectParameter("apellidos_cliente", typeof(string));
    
            var telefono_clienteParameter = telefono_cliente != null ?
                new ObjectParameter("telefono_cliente", telefono_cliente) :
                new ObjectParameter("telefono_cliente", typeof(string));
    
            var email_clienteParameter = email_cliente != null ?
                new ObjectParameter("email_cliente", email_cliente) :
                new ObjectParameter("email_cliente", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var fecha_estimadaParameter = fecha_estimada != null ?
                new ObjectParameter("fecha_estimada", fecha_estimada) :
                new ObjectParameter("fecha_estimada", typeof(string));
    
            var marca_vehiculoParameter = marca_vehiculo != null ?
                new ObjectParameter("marca_vehiculo", marca_vehiculo) :
                new ObjectParameter("marca_vehiculo", typeof(string));
    
            var modelo_vehiculoParameter = modelo_vehiculo != null ?
                new ObjectParameter("modelo_vehiculo", modelo_vehiculo) :
                new ObjectParameter("modelo_vehiculo", typeof(string));
    
            var placa_vehiculoParameter = placa_vehiculo != null ?
                new ObjectParameter("placa_vehiculo", placa_vehiculo) :
                new ObjectParameter("placa_vehiculo", typeof(string));
    
            var anio_vehiculoParameter = anio_vehiculo != null ?
                new ObjectParameter("anio_vehiculo", anio_vehiculo) :
                new ObjectParameter("anio_vehiculo", typeof(string));
    
            var estado_citaParameter = estado_cita != null ?
                new ObjectParameter("estado_cita", estado_cita) :
                new ObjectParameter("estado_cita", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarCitas", id_citaParameter, id_servicioParameter, nombre_clienteParameter, apellidos_clienteParameter, telefono_clienteParameter, email_clienteParameter, direccionParameter, fecha_estimadaParameter, marca_vehiculoParameter, modelo_vehiculoParameter, placa_vehiculoParameter, anio_vehiculoParameter, estado_citaParameter);
        }
    
        public virtual int EditarRol(Nullable<int> id_rol, string nombre_rol)
        {
            var id_rolParameter = id_rol.HasValue ?
                new ObjectParameter("id_rol", id_rol) :
                new ObjectParameter("id_rol", typeof(int));
    
            var nombre_rolParameter = nombre_rol != null ?
                new ObjectParameter("nombre_rol", nombre_rol) :
                new ObjectParameter("nombre_rol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarRol", id_rolParameter, nombre_rolParameter);
        }
    
        public virtual int EditarServicio(Nullable<int> id_servicio, string nombre_servicio, string descripcion, string duracion, string imagen_servicio, Nullable<System.DateTime> fecha_creacion)
        {
            var id_servicioParameter = id_servicio.HasValue ?
                new ObjectParameter("id_servicio", id_servicio) :
                new ObjectParameter("id_servicio", typeof(int));
    
            var nombre_servicioParameter = nombre_servicio != null ?
                new ObjectParameter("nombre_servicio", nombre_servicio) :
                new ObjectParameter("nombre_servicio", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var duracionParameter = duracion != null ?
                new ObjectParameter("duracion", duracion) :
                new ObjectParameter("duracion", typeof(string));
    
            var imagen_servicioParameter = imagen_servicio != null ?
                new ObjectParameter("imagen_servicio", imagen_servicio) :
                new ObjectParameter("imagen_servicio", typeof(string));
    
            var fecha_creacionParameter = fecha_creacion.HasValue ?
                new ObjectParameter("fecha_creacion", fecha_creacion) :
                new ObjectParameter("fecha_creacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarServicio", id_servicioParameter, nombre_servicioParameter, descripcionParameter, duracionParameter, imagen_servicioParameter, fecha_creacionParameter);
        }
    
        public virtual int EditCar(string placa, string marca, string modelo, string anio, string motor, string vIN, string comentario)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("modelo", modelo) :
                new ObjectParameter("modelo", typeof(string));
    
            var anioParameter = anio != null ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(string));
    
            var motorParameter = motor != null ?
                new ObjectParameter("motor", motor) :
                new ObjectParameter("motor", typeof(string));
    
            var vINParameter = vIN != null ?
                new ObjectParameter("VIN", vIN) :
                new ObjectParameter("VIN", typeof(string));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("comentario", comentario) :
                new ObjectParameter("comentario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditCar", placaParameter, marcaParameter, modeloParameter, anioParameter, motorParameter, vINParameter, comentarioParameter);
        }
    
        public virtual int EliminarCarro(string placa)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarCarro", placaParameter);
        }
    
        public virtual int EliminarCita(Nullable<int> id_cita)
        {
            var id_citaParameter = id_cita.HasValue ?
                new ObjectParameter("id_cita", id_cita) :
                new ObjectParameter("id_cita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarCita", id_citaParameter);
        }
    
        public virtual int EliminarResena(Nullable<int> id_resena)
        {
            var id_resenaParameter = id_resena.HasValue ?
                new ObjectParameter("id_resena", id_resena) :
                new ObjectParameter("id_resena", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarResena", id_resenaParameter);
        }
    
        public virtual int EliminarRol(Nullable<int> id_rol)
        {
            var id_rolParameter = id_rol.HasValue ?
                new ObjectParameter("id_rol", id_rol) :
                new ObjectParameter("id_rol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarRol", id_rolParameter);
        }
    
        public virtual int EliminarServicio(Nullable<int> id_servicio)
        {
            var id_servicioParameter = id_servicio.HasValue ?
                new ObjectParameter("id_servicio", id_servicio) :
                new ObjectParameter("id_servicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarServicio", id_servicioParameter);
        }
    
        public virtual int EliminarUsuario(Nullable<int> id_usuario)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarUsuario", id_usuarioParameter);
        }
    
        public virtual ObjectResult<IniciarSesion_Result> IniciarSesion(string email, string contrasena)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IniciarSesion_Result>("IniciarSesion", emailParameter, contrasenaParameter);
        }
    
        public virtual ObjectResult<Login_Result> Login(string cedula, string contrasena)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Login_Result>("Login", cedulaParameter, contrasenaParameter);
        }
    
        public virtual ObjectResult<SeeStatus_Result> SeeStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeeStatus_Result>("SeeStatus");
        }
    
        public virtual ObjectResult<UsuarioXcedula_Result> UsuarioXcedula(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsuarioXcedula_Result>("UsuarioXcedula", cedulaParameter);
        }
    
        public virtual ObjectResult<UsuarioXid_Result> UsuarioXid(Nullable<long> id_usuario)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsuarioXid_Result>("UsuarioXid", id_usuarioParameter);
        }
    
        public virtual ObjectResult<VerActivos_Result> VerActivos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerActivos_Result>("VerActivos");
        }
    
        public virtual ObjectResult<VerCaros_Result> VerCaros()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerCaros_Result>("VerCaros");
        }
    
        public virtual ObjectResult<VerCarroPorPlaca_Result> VerCarroPorPlaca(string placa)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerCarroPorPlaca_Result>("VerCarroPorPlaca", placaParameter);
        }
    
        public virtual ObjectResult<VerCitas_Result> VerCitas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerCitas_Result>("VerCitas");
        }
    
        public virtual ObjectResult<VerResenaPorId_Result> VerResenaPorId(Nullable<int> id_resena)
        {
            var id_resenaParameter = id_resena.HasValue ?
                new ObjectParameter("id_resena", id_resena) :
                new ObjectParameter("id_resena", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerResenaPorId_Result>("VerResenaPorId", id_resenaParameter);
        }
    
        public virtual ObjectResult<VerResenas_Result> VerResenas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerResenas_Result>("VerResenas");
        }
    
        public virtual ObjectResult<VerRoles_Result> VerRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerRoles_Result>("VerRoles");
        }
    
        public virtual ObjectResult<VerRolPorId_Result> VerRolPorId(Nullable<int> id_rol)
        {
            var id_rolParameter = id_rol.HasValue ?
                new ObjectParameter("id_rol", id_rol) :
                new ObjectParameter("id_rol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerRolPorId_Result>("VerRolPorId", id_rolParameter);
        }
    
        public virtual ObjectResult<VerServicios_Result> VerServicios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerServicios_Result>("VerServicios");
        }
    
        public virtual ObjectResult<VerUsuarioPorId_Result> VerUsuarioPorId(string id_usuario)
        {
            var id_usuarioParameter = id_usuario != null ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerUsuarioPorId_Result>("VerUsuarioPorId", id_usuarioParameter);
        }
    
        public virtual ObjectResult<VerUsuarios_Result> VerUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerUsuarios_Result>("VerUsuarios");
        }
    }
}
